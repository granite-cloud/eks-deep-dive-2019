##########
# Configure EKS cluster post the initial worker node bootstrap
##########

# Install aws-iam-authenticator for authentication
curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
chmod +x ./aws-iam-authenticator
mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc

###########
# aws cli configure so that you can authenticate to the cluster with the user that created aws configure
#
# or as Environment Vars (this could be stored in vault||param store|| secrets manager and used in CI/CD)
###########
export AWS_ACCESS_KEY_ID= <Key>
export AWS_SECRET_ACCESS_KEY= <key>
export AWS_DEFAULT_REGION=us-east-1

# Install kubectl
curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/kubectl
chmod +x ./kubectl
cp ./kubectl $HOME/bin/kubectl


# Configure kubectl
aws eks update-kubeconfig --name <cluster name>


#####
# Enable the nodes to join the cluster
#####

# Download the configuration map
curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2018-11-07/aws-auth-cm.yaml

# Edit this file, replacing the <ARN of instance role (not instance profile)> snippet with the NodeInstanceRole value that you recorded in the previous procedure, and save the file.

# Apply the config
kubectl apply -f aws-auth-cm.yaml
kubectl get nodes --watch


# Install helm
export HELM_INSTALL_DIR=<>
export PATH=/usr/local/sbin:$PATH # Place in users .bashrc profile
curl -L https://git.io/get_helm.sh | bash
 helm init --client-only

 # Install the tillerless plugin
 helm plugin install https://github.com/rimusz/helm-tiller
